Version = 0.4;
Program : 
{
  VerbosityLevel = 7;
  NumberOfThreads = 10;
  AutoLaunch : 
  {
    Gnuplot : 
    {
      Potential = false;
      KCurve = true;
	  Wavefunctions = true;
    };
  };
};
Output : 
{
  KCurve = "output/KCurve.dat";
  KFound = "output/KFound.dat";
  Potential = "output/Potential.dat";
  PotentialPrecision = "output/PotentialPrecision.dat";
  InterestingPoints = "output/InterestingPoints.dat";
  EnergyFile = "output/Energy.dat";
  Wavefunctions = "output/Wavefunctions.dat";
  Matrix = "";
  LanczosObject = "";
  ProductWavefunction = "";
};

OutputSpecifics : 
{
  WavefunctionProperties :
  {
	MinX = -20.0;
	MaxX = 20.0;
	DeltaX = 0.01;
  }

  ExtraInteresting = 
  (
		//[0.971098, -0.0]
		//[1.60, -1.6E-5]
      //[0.72, 0.0],
	  //[0.94978418601280157, 0.0],
	  //[1.25, 0.0]
      //[0.0502532, 0.0]
		//[0.9, -0.00008]
  );

};
Computation : 
{
  ExpectedMatrixType = "Symmetric";

  HarmonicOscillator :
  {
	Override = false; //switch to use (or not use) the HO override.
	Nmax = 50;
	AngularFrequency = [1.0, 1.0];
	Xmin = [0.0, 0.0]; ///Important even for non-override situations.
  }
  



  BasisFunctions = [ "sqrt(1.0/pi)*sin(k*x)", "sqrt(1.0/pi)*cos(k*x)"];
  
  NumberOfParticles = 1; 
  CouplingCoefficient = 0.0;

  Solver :
  {
	Type = "Lapack";
	WorkArea = "work.proc"; ///Ignored in current implementation. May be used in the future.
	Shift = [0.56, -0.00029487969016554733];  ///Ignored for Lapack. Note: in ENERGY spectra.
	NumberOfValues = 5; ///Ignored for Lapack.
	FindEigenvectors = true; ///Use with caution: will not be compatible with printing any kind of eigenvector related information (an exception will be thrown)
  }



  Interaction: 
  {
	//1 g in Rontani units = 0.043990523038242489 in my units.
	CouplingCoefficient = 0.0; //-0.64
	Nmax = 25;
	Precision = 1000;
	CacheFile = ""; ///Use with caution. May cause malfunctions etc.
  }

  

  Units :
  {
	HbarTimesLambda = 1.0;
	MassOverLambda2 = 1.0;
	LengthUnitName = "L";
	EnergyUnitName = "\Eps";
	TimeToHertzFactor = 1.0;
  }

  Potential :
  {
	Type = "Parametrized";
	Precision = 1000;

	Function = "0.5*omegasq*pow(x,2.0)* if(x < 0, 1.0, exp(-lambda*pow(x,2.0)))";

	Interval = ["-9", "20"];

	VariableParameters = (
	  );

	Parameters = (
	  {
		Name = "lambda";
		Value = 0.125;
	  },
	  {
		Name = "omegasq";
		Value = 1.0;
	  }
	  );
  }	 

  KCurve : 
  {
    Values = ( 
      {
        P0 = [ 0.0, 0.0 ];
        P1 = [ 0.93, -8.0E-2 ];
        Points = 60;
      }, 
      {
        P0 = [ 0.93, -8.0E-2 ];
        P1 = [ 2.0, 0.0];
        Points = 60;
      },
      {
        P0 = [ 2.0,  0.0 ];
        P1 = [ 30.0, 0.0 ];
        Points = 200;
      }
	  );
  };
};
